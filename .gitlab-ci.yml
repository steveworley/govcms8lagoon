---

image: quay.io/govcms/govcms-ci

services:
  - "docker:dind"

stages:
  - validate
  - build
  - test
  - deploy

.variables: &vars
  LAGOON_IMAGE_VERSION: "v1.1.2"
  DRUPAL_CORE_VERSION: "8.7.8"
  GOVCMS_PROJECT_VERSION: "1.x-dev"
  SITE_AUDIT_VERSION: "7.x-3.x"
  PHP_IMAGE_VERSION: "7.2"
  DOCKERHUB_NAMESPACE: "govcms8lagoon"
  IMAGE_VERSION_TAG_PREFIX: ""
  IMAGE_VERSION_TAG: ""
  IMAGE_TAG_EDGE: $CI_COMMIT_SHA

.test: &test
  variables:
    << : *vars
  before_script:
    # @TODO: Re-instate container caching.
    # - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    # - IMAGE_TAG_EDGE=$CI_COMMIT_SHA DOCKER_REGISTRY_HOST=$CI_REGISTRY/ DOCKERHUB_NAMESPACE=dof-dev/govcms8lagoon .docker/pull.sh
    - docker network prune -f && docker network inspect amazeeio-network >/dev/null || docker network create amazeeio-network
    - ahoy build
    - ahoy up

.test-diff: &test-diff
  variables:
    <<: *vars
    DOCKER_CONFIG: ~/.docker
  stage: test
  artifacts:
    paths:
      - $CI_PROJECT_DIR/logs
  before_script:
    - curl -LO https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64 && chmod +x container-diff-linux-amd64
    - mkdir -p $HOME/bin
    - export PATH=$PATH:$HOME/bin
    - mv container-diff-linux-amd64 $HOME/bin/container-diff
    - docker network prune -f && docker network inspect amazeeio-network >/dev/null || docker network create amazeeio-network
    - ahoy build
  script:
    - mkdir logs
    - |
      for SERVICE in chrome govcms8 mariadb-drupal php redis solr test varnish-drupal; do
        $HOME/bin/container-diff diff --type=file daemon://${DOCKERHUB_NAMESPACE}/$SERVICE remote://registry.hub.docker.com/${DOCKERHUB_NAMESPACE}/$SERVICE:latest --output logs/$SERVICE.txt
      done
  needs:
    - build:containers

.deploy: &deploy
  stage: deploy
  before_script:
    # @TODO: Re-instate container caching.
    # - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    # - IMAGE_TAG_EDGE=$CI_COMMIT_SHA DOCKER_REGISTRY_HOST=$CI_REGISTRY/ DOCKERHUB_NAMESPACE=dof-dev/govcms8lagoon .docker/pull.sh
    # - docker logout
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker network prune -f && docker network inspect amazeeio-network >/dev/null || docker network create amazeeio-network
    - ahoy build
  script:
    - ahoy push

validate:containers:
  stage: validate
  script:
    - docker-compose config -q

build:containers:
  variables:
    <<: *vars
    DOCKER_REGISTRY_HOST: $CI_REGISTRY/
    DOCKERHUB_NAMESPACE: dof-dev/govcms8lagoon
  stage: build
  script:
    # @TODO: Re-instate container caching.
    # - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker network prune -f && docker network inspect amazeeio-network >/dev/null || docker network create amazeeio-network
    - ahoy -v build
    - docker-compose exec -T test dockerize -wait tcp://mariadb:3306 -timeout 1m
    # @TODO: Re-instate container caching.
    # - .docker/push.sh

#
# Container diffing requires pushing images into the gitlab registry.
# This should be reinstated when container caching has been ironed out.
#
# test:diff-edge:
#   <<: *test-diff
#   variables:
#     <<: *vars
#     IMAGE_TAG_EDGE: edge
#     IMAGE_VERSION_TAG: edge
#   only:
#     - develop

# test:diff-beta:
#   <<: *test-diff
#   variables:
#     <<: *vars
#     IMAGE_TAG_EDGE: beta
#     IMAGE_VERSION_TAG: beta
#   only:
#     - master

# test:diff-latest:
#   <<: *test-diff
#   variables:
#     <<: *vars
#     IMAGE_TAG_EDGE: latest
#     IMAGE_VERSION_TAG: latest
#   only:
#     - tags

test:containers:
  <<: *test
  stage: test
  script:
    - ./tests/goss/run_all.sh
  needs:
    - build:containers

test:redis:
  <<: *test
  stage: test
  script:
    - ahoy install
    - docker-compose exec -T --env ENABLE_REDIS=true cli drush status
    - |
      if [ $(docker-compose exec -T redis redis-cli KEYS '*' | wc -l) -le 1 ]; then
        echo 'Redis fail: No valid cache keys.'
        exit 1
      else
        echo "Redis success: Redis contains $redisKeys keys."
      fi
  needs:
    - build:containers

test:site_install:
  <<: *test
  stage: test
  script:
    - ahoy -v install -- install_configure_form.update_status_module='array(FALSE,FALSE)'
  needs:
    - build:containers

deploy:edge:
  <<: *deploy
  variables:
    <<: *vars
    IMAGE_TAG_EDGE: edge
    DOCKERHUB_NAMESPACE: "govcms8lagoon"
    COMPOSE_PROJECT_NAME: "govcms8lagoon"
  only:
    - develop

deploy:beta:
  <<: *deploy
  variables:
    <<: *vars
    IMAGE_TAG_EDGE: beta
    DOCKERHUB_NAMESPACE: "govcms8lagoon"
    COMPOSE_PROJECT_NAME: "govcms8lagoon"
  only:
    - master

# @TODO: Allow automatic deploys of latest and tags after
# the process has been validated.
# deploy:latest:
#   <<: *deploy
#   variables:
#     <<: *vars
#     IMAGE_TAG_EDGE: latest
#     DOCKERHUB_NAMESPACE: "govcms8lagoon"
#     COMPOSE_PROJECT_NAME: "govcms8lagoon"
#   only:
#     - tags

# deploy:tag:
#   <<: *deploy
#   variables:
#     <<: *vars
#     IMAGE_TAG_EDGE: $CI_COMMIT_TAG
#     DOCKERHUB_NAMESPACE: "govcms8lagoon"
#     COMPOSE_PROJECT_NAME: "govcms8lagoon"
#   only:
#     - tags
